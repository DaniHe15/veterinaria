// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using veterinaria5.Data;

#nullable disable

namespace veterinaria5.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Veterinaria5.Modelos.Dueno", b =>
                {
                    b.Property<int>("IdDueno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_DUENO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDueno"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("NumDocumento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NUM_DOCUMENTO");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("TIPO_DOCUMENTO");

                    b.HasKey("IdDueno")
                        .HasName("PK_DUENO");

                    b.ToTable("DUENO", (string)null);
                });

            modelBuilder.Entity("Veterinaria5.Modelos.Mascota", b =>
                {
                    b.Property<int>("IdMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MASCOTA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMascota"), 1L, 1);

                    b.Property<DateTime>("FechaNacimiento")
                        .IsUnicode(false)
                        .HasColumnType("DateTime")
                        .HasColumnName("FECHA_NACIMIENTO");

                    b.Property<int>("IdDueno")
                        .HasColumnType("int")
                        .HasColumnName("ID_DUENO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("NOMBRE");

                    b.Property<int>("Peso")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("PESO");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("TIPO");

                    b.HasKey("IdMascota")
                        .HasName("PK_MASCOTA");

                    b.HasIndex("IdDueno");

                    b.ToTable("MASCOTA", (string)null);
                });

            modelBuilder.Entity("Veterinaria5.Modelos.Mascota", b =>
                {
                    b.HasOne("Veterinaria5.Modelos.Dueno", "IdDuenoNavigation")
                        .WithMany("MascotaFK")
                        .HasForeignKey("IdDueno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MASCOTA");

                    b.Navigation("IdDuenoNavigation");
                });

            modelBuilder.Entity("Veterinaria5.Modelos.Dueno", b =>
                {
                    b.Navigation("MascotaFK");
                });
#pragma warning restore 612, 618
        }
    }
}
